// <auto-generated />
using System;
using BloodLibrary.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BloodLibrary.Migrations
{
    [DbContext(typeof(BloodDBcontext))]
    [Migration("20191120015653_name")]
    partial class name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BloodLibrary.Entities.BloodBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasMaxLength(50);

                    b.Property<string>("bloodBankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("city");

                    b.Property<string>("email");

                    b.Property<string>("phone");

                    b.Property<string>("website");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("BloodLibrary.Entities.BloodStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("bastBefore");

                    b.Property<int>("bloodBankId");

                    b.Property<string>("bloodType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("quantity")
                        .HasMaxLength(50);

                    b.Property<string>("status")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("bloodBankId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("BloodLibrary.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("age");

                    b.Property<string>("bloodGroup");

                    b.Property<string>("city");

                    b.Property<string>("firstName");

                    b.Property<string>("gender");

                    b.Property<string>("lastName");

                    b.Property<string>("phone");

                    b.HasKey("Id");

                    b.ToTable("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
